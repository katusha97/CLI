# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the task-base-dev branch
  push:
    branches: [ task-base-dev ]
  pull_request:
    branches: [ task-base-dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      #setup jdk 
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
            # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
              java-version: 1.8
        
      # gradle 
      - name: Build with Gradle
        run: ./gradlew build
      
      - name: Test with Gradle
        run: ./gradlew test
#       - name: Gradle Command
#         uses: eskatos/gradle-command-action@v1.3.3
#         with:
#           # Path to the Gradle Wrapper directory
#           wrapper-directory: src/gradle/wrapper
#           # Path to the Gradle executable
#           gradle-executable: gradlew
#           # Gradle version to use
#           build-root-directory: /
# #           # Gradle command line arguments, see gradle --help
# #           arguments: # optional
#           # Whether caching wrapper installation is enabled or not, default to 'true'
#           wrapper-cache-enabled: true
 
      
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

          
